# $schema: http://json.schemastore.org/github-workflow.json
name: main

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

env:
  ARTIFACT_REGISTRY: europe-north1-docker.pkg.dev/personal-artifacts-353012/harmelodic

jobs:
  go-lint-build-push:
    permissions:
      contents: read
      id-token: write # Fetch OIDC Token for GCP Auth
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version-file: go.mod
      # Install golangci-lint (golangci-lint runs during the `make lint`... but also runs as part of the action)
      # (bit wasteful, but it's fast and does caching - so running linting twice is a fair trade-off (for now))
      - uses: golangci/golangci-lint-action@9511564208289d6c9378c8852eec4ca6f9431220
        with:
          version: latest
      - run: make
      - run: docker build -t "init-microservice-go:$GITHUB_SHA" .
      - uses: google-github-actions/auth@b7593ed2efd1c1617e1b0254da33b86225adb2a5 # v2
        with:
          workload_identity_provider: projects/401363556022/locations/global/workloadIdentityPools/github/providers/github-oidc
          service_account: automation@automation-220928.iam.gserviceaccount.com
      - run: gcloud auth configure-docker europe-north1-docker.pkg.dev
      - run: docker tag "init-microservice-go:$GITHUB_SHA" "$ARTIFACT_REGISTRY/init-microservice-go:$GITHUB_SHA"
      - run: docker push "$ARTIFACT_REGISTRY/init-microservice-go:$GITHUB_SHA"
      - run: docker tag "init-microservice-go:$GITHUB_SHA" "$ARTIFACT_REGISTRY/init-microservice-go:latest"
      - run: docker push "$ARTIFACT_REGISTRY/init-microservice-go:latest"

  mkdocs-deploy:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
      - run: pip install -r requirements.txt
      - run: mkdocs build
      - run: mkdocs gh-deploy --force
